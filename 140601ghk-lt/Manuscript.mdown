Manuscript: GitHubで行うreproducible research
====== 

## はじめに

`title slide`

みなさん、「論文」と聞くとどういうイメージを持つでしょうか。
（誰かに聞いてみる。ちょっとコメント）
ぐーぐる先生に聞いてみました。

`slide#1`

どうやらコピペ、捏造といった悪い印象を持つ人がいるようです。

`slide#2`

日本でも最近、論文の捏造疑惑が問題になりました。論文に書かれている実験方法の**再現性**の欠如が疑われ、こうした問題を招いたのです。研究の再現性は、発表された論文の**客観性**、**明瞭性**、**妥当性**を証明するために必要なもので、科学者はこうした研究の再現性を考えていなければなりません。

`slide3`

今回のLTでは、論文につきまとう再現性の問題を解決するのに大きな役割を果たす**reproducible research**とソーシャルコーディングの概念を持つ**GitHubを使ったガイドライン**の提案について話します。

## Githubで行うreproducible research

`slide#4`

まず、一般的な研究の流れについて説明します。先行研究の調査をして、問題点を見つけて研究計画を立てます。そしてデータをとってきて解析し、文章にし、学術論文として発表する、というものです。

> 
1. 先行研究の調査、既存研究からの課題・問題を見出す
2. 研究計画を立てる
3. データをとる
4. データ解析、統計的手法を用いて結果を導く
5. 論文を執筆


ですが実際には、この流れ通りすんなりと行くわけではありません。特に**統計データ解析**と**論文の執筆**は鬼門とも呼べるものです。ここに割く時間はとても多いです。

`slide5`

研究あるある的なネタですが、解析のためのフォルダには、いつ、なんのために作ったのかすらわからない、さまざまなファイルが混同し混沌となりがちです。きちんとルールを決めて管理したいところです。

`slide6`

また、原稿ファイルは修正と変更を加えるたびに使いもしない古いバージョンのものを大事に保管してしまったりします。こうしたものはローカルから捨てましょう。

`silde7`

ではGitHubを研究に使うとどういうご利益があるのか、という話です。GitHubはソーシャルコーディングの概念にもとづくバージョン管理サービスであり、その機能を使えばさっき言ったような問題はたちまち解決することができます。

それでは実際にどうやるのか、という話です。RRで重要なデータの解析と論文の執筆に焦点を絞ります。

`slide8`

データの解析は、統計解析環境「`R`」を使うことを推奨します。なぜなら`R`はオープンソースで開発が行われるフリーソフトであり、統計に強いだけでなく、さまざまな拡張機能を備えているためです。多くの研究でRは使われています。

単純に、Rのソースコードをpushしても良いのですが、`Rstudio.app`を使って、`Rmarkdown`でソースコードを書くことがより良い方法です。`Rmarkdown`では、
コメントと実行ソースを切り離すことができます。また`Rmarkdown`
で書かれたソースコードは、`markdown`と`html`に出力することができます。`markdown`なので、これをGitHub上で見ると、スクリプトとコメント、プロットの結果までを１つの画面で確認することができます。

またGitHubでは画像ファイルの差分確認も行えます。

`slide9`

論文執筆では、マイクロソフトのワードではなく`LaTeX`を使うことを勧めます。なぜならワードがバイナリファイルであるのに対して、`LaTeX`のファイルはテキストファイルであるからです。テキストファイルなので、さきほどのRのソースコード同様、差分の確認や復元をとることが可能です。なおかつ、LaTeXで作られた文書は綺麗です。

`slide10`

ここまでは一人で行うものですが、GitHubの機能を活用すれば、その先の論文査読もできるのではないかと考えます。

通常の査読は、出版社や編集者を通して、匿名の査読者と著者とのやりとりがなされます。ここで原稿の改訂を行うのですが、これをissuesとpull requestで代用することができるのではないでしょうか。

さらに、データ解析や論文執筆の過程でも、第三者からのコメントがもらえる可能性もあり、新しい科学のススメ方があるような気がします。



## 今後の展望と課題

`slide`

### 展望

* RRの考えは普及しつつある。大事、という認識は十分
* 


* * *

Issues

